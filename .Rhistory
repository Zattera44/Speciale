}
if(len == 0){
errors <- FALSE
}
}
merged <- merged[!(is.na(merged$impVol)),]
errors = TRUE
len <- 0
while(errors){
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
}
merged <- merged[!(is.na(merged$impVol)),]
impVolPlot <- ggplot(data = merged , mapping = aes(Moneyness, impVol)) +
geom_line(aes(colour = factor(Expiry))) + xlab('log(K/S)') + ylab('Implied volatility') +
labs(colour = "Expiry"); impVolPlot
errors = TRUE
len <- 0
while(errors){
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
}
merged <- merged[!(is.na(merged$impVol)),]
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
}
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
}
library(quantmod)
library(tidyverse)
BSM <- function(S,K,r,sigma,TTM){
d1 <- (log(S/K) + (r + sigma^2/2) * TTM)/(sigma * sqrt(TTM))
d2 <- d1 - sigma * sqrt(TTM)
price <- pnorm(d1) * S - exp(-r * TTM) * K * pnorm(d2)
return(price)
}
impVol <- function(price,K,TTM,S,r,increment=0.00001,limit=1000){
limit <- price/limit
continue <- TRUE
sigma <- increment
while(continue){
eps <- price - BSM(S,K,r,sigma,TTM)
if(abs(eps) < limit){
continue <- FALSE
}
sigma <- sigma + increment
if(sigma > 2){
continue <- FALSE
sigma <- NA
}
}
return(sigma)
}
dates <- c('2022-03-02',
#'2022-03-21',
#'2022-05-20',
'2022-04-29',
'2022-04-01',
'2022-07-29',
'2023-01-20')
SPX <- getOptionChain('^SPX', dates)
expiry_dates <- as.Date(names(SPX), format = '%b.%d.%Y')
expiry_days <- expiry_dates - Sys.Date()
i = 1
for(df in SPX){
if(as.character(as.Date(names(SPX)[i], format = '%b.%d.%Y')) %in% dates){
if(i == 1){
merged <- df$call
merged$Expiry <- as.numeric(expiry_days[i])
}
else{
current <- df$calls
current$Expiry <- as.numeric(expiry_days[i])
merged <- rbind(merged, current)
}
}
i = i + 1
}
data <- merged
S0 <- getQuote('^SPX')$Last; r <- 0
#merged$Expiry <- merged$Expiry/365
merged$Price <- (merged$Bid+merged$Ask)/2
merged$Moneyness <- log(merged$Strike/S0)
merged <- merged[abs(merged$Moneyness) < 0.7,]
merged <- merged[merged$IV > mean(merged$IV)-sd(merged$IV),]
merged <- merged[merged$IV<mean(merged$IV)+sd(merged$IV),]
merged <- merged[c('Strike','Price', 'Expiry', 'IV', 'Moneyness')]
merged <- merged[!(is.na(merged$Price)),]
l <- length(merged$Price)
for(i in 1:l){
merged[i, 'impVol'] <- impVol(merged$Price[i], merged$Strike[i], merged$Expiry[i]/365, S0, r)
print(i)
}
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
merged <- merged[!(is.na(merged$impVol)),]
}
impVolPlot <- ggplot(data = merged , mapping = aes(Moneyness, impVol)) +
geom_line(aes(colour = factor(Expiry))) + xlab('log(K/S)') + ylab('Implied volatility') +
labs(colour = "Expiry"); impVolPlot
merged[merged$Expiry==66,]
tail(merged[merged$Expiry==66,])
max(merged[merged$Expiry==66,Moneyness])
max(merged[merged$Expiry==66,'Moneyness'])
tail(merged[merged$Expiry==66,],20)
library(quantmod)
library(tidyverse)
BSM <- function(S,K,r,sigma,TTM){
d1 <- (log(S/K) + (r + sigma^2/2) * TTM)/(sigma * sqrt(TTM))
d2 <- d1 - sigma * sqrt(TTM)
price <- pnorm(d1) * S - exp(-r * TTM) * K * pnorm(d2)
return(price)
}
impVol <- function(price,K,TTM,S,r,increment=0.00001,limit=1000){
limit <- price/limit
continue <- TRUE
sigma <- increment
while(continue){
eps <- price - BSM(S,K,r,sigma,TTM)
if(abs(eps) < limit){
continue <- FALSE
}
sigma <- sigma + increment
if(sigma > 2){
continue <- FALSE
sigma <- NA
}
}
return(sigma)
}
dates <- c('2022-03-02',
#'2022-03-21',
#'2022-05-20',
'2022-04-29',
'2022-04-01',
'2022-07-29',
'2023-01-20')
SPX <- getOptionChain('^SPX', dates)
expiry_dates <- as.Date(names(SPX), format = '%b.%d.%Y')
expiry_days <- expiry_dates - Sys.Date()
i = 1
for(df in SPX){
#if(as.character(as.Date(names(SPX)[i], format = '%b.%d.%Y')) %in% dates){
if(i == 1){
merged <- df$call
merged$Expiry <- as.numeric(expiry_days[i])
}
else{
current <- df$calls
current$Expiry <- as.numeric(expiry_days[i])
merged <- rbind(merged, current)
}
#}
i = i + 1
}
data <- merged
S0 <- getQuote('^SPX')$Last; r <- 0
#merged$Expiry <- merged$Expiry/365
merged$Price <- (merged$Bid+merged$Ask)/2
merged$Moneyness <- log(merged$Strike/S0)
merged <- merged[abs(merged$Moneyness) < 0.7,]
merged <- merged[merged$IV > mean(merged$IV)-sd(merged$IV),]
merged <- merged[merged$IV<mean(merged$IV)+sd(merged$IV),]
merged <- merged[c('Strike','Price', 'Expiry', 'IV', 'Moneyness')]
merged <- merged[!(is.na(merged$Price)),]
l <- length(merged$Price)
for(i in 1:l){
merged[i, 'impVol'] <- impVol(merged$Price[i], merged$Strike[i], merged$Expiry[i]/365, S0, r)
print(i)
}
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
merged <- merged[!(is.na(merged$impVol)),]
}
impVolPlot <- ggplot(data = merged , mapping = aes(Moneyness, impVol)) +
geom_line(aes(colour = factor(Expiry))) + xlab('log(K/S)') + ylab('Implied volatility') +
labs(colour = "Expiry"); impVolPlot
expiry
i
length(merged[merged$Expiry==expiry, 'impVol'])
merged[merged$Expiry==expiry, 'impVol']
merged <- merged[!(is.na(merged$impVol)),]
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
merged <- merged[!(is.na(merged$impVol)),]
}
impVolPlot <- ggplot(data = merged , mapping = aes(Moneyness, impVol)) +
geom_line(aes(colour = factor(Expiry))) + xlab('log(K/S)') + ylab('Implied volatility') +
labs(colour = "Expiry"); impVolPlot
library(quantmod)
library(tidyverse)
BSM <- function(S,K,r,sigma,TTM){
d1 <- (log(S/K) + (r + sigma^2/2) * TTM)/(sigma * sqrt(TTM))
d2 <- d1 - sigma * sqrt(TTM)
price <- pnorm(d1) * S - exp(-r * TTM) * K * pnorm(d2)
return(price)
}
impVol <- function(price,K,TTM,S,r,increment=0.00001,limit=1000){
limit <- price/limit
continue <- TRUE
sigma <- increment
while(continue){
eps <- price - BSM(S,K,r,sigma,TTM)
if(abs(eps) < limit){
continue <- FALSE
}
sigma <- sigma + increment
if(sigma > 2){
continue <- FALSE
sigma <- NA
}
}
return(sigma)
}
dates <- c('2022-03-02',
#'2022-03-21',
#'2022-05-20',
'2022-04-29',
'2022-04-01',
'2022-07-29',
'2023-01-20')
SPX <- getOptionChain('^SPX', dates)
expiry_dates <- as.Date(names(SPX), format = '%b.%d.%Y')
expiry_days <- expiry_dates - Sys.Date()
i = 1
for(df in SPX){
#if(as.character(as.Date(names(SPX)[i], format = '%b.%d.%Y')) %in% dates){
if(i == 1){
merged <- df$call
merged$Expiry <- as.numeric(expiry_days[i])
}
else{
current <- df$calls
current$Expiry <- as.numeric(expiry_days[i])
merged <- rbind(merged, current)
}
#}
i = i + 1
}
data <- merged
S0 <- getQuote('^SPX')$Last; r <- 0
#merged$Expiry <- merged$Expiry/365
merged$Price <- (merged$Bid+merged$Ask)/2
merged$Moneyness <- log(merged$Strike/S0)
merged <- merged[abs(merged$Moneyness) < 0.7,]
merged <- merged[merged$IV > mean(merged$IV)-sd(merged$IV),]
merged <- merged[merged$IV<mean(merged$IV)+sd(merged$IV),]
merged <- merged[c('Strike','Price', 'Expiry', 'IV', 'Moneyness')]
merged <- merged[!(is.na(merged$Price)),]
l <- length(merged$Price)
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'Price'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'Price'][i-1] < merged[merged$Expiry==expiry, 'Price'][i]) && (merged[merged$Expiry==expiry, 'Price'][i+1] < merged[merged$Expiry==expiry, 'Price'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'Price'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
merged <- merged[!(is.na(merged$Price)),]
}
for(i in 1:l){
merged[i, 'impVol'] <- impVol(merged$Price[i], merged$Strike[i], merged$Expiry[i]/365, S0, r)
print(i)
}
# merged <- merged[!(is.na(merged$impVol)),]
#
# errors = TRUE
# while(errors){
#   len <- 0
#   k = 1
#   for(expiry in unique(merged$Expiry)){
#
#     print(expiry)
#     remove <- vector()
#
#     for(i in 2:(length(merged[merged$Expiry==expiry, 'impVol'])-1)){
#
#       print(i)
#
#       if((merged[merged$Expiry==expiry, 'impVol'][i-1] < merged[merged$Expiry==expiry, 'impVol'][i]) && (merged[merged$Expiry==expiry, 'impVol'][i+1] < merged[merged$Expiry==expiry, 'impVol'][i])){
#         remove[k] <- i
#         k <- k + 1
#       }
#       len <- len + length(remove)
#     }
#     merged[merged$Expiry==expiry, 'impVol'][remove] <- NA
#   }
#   if(len == 0){
#     errors <- FALSE
#   }
#   merged <- merged[!(is.na(merged$impVol)),]
# }
impVolPlot <- ggplot(data = merged , mapping = aes(Moneyness, impVol)) +
geom_line(aes(colour = factor(Expiry))) + xlab('log(K/S)') + ylab('Implied volatility') +
labs(colour = "Expiry"); impVolPlot
BSM <- function(S,K,r,sigma,TTM){
d1 <- (log(S/K) + (r + sigma^2/2) * TTM)/(sigma * sqrt(TTM))
d2 <- d1 - sigma * sqrt(TTM)
price <- pnorm(d1) * S - exp(-r * TTM) * K * pnorm(d2)
return(price)
}
impVol <- function(price,K,TTM,S,r,increment=0.00001,limit=1000){
limit <- price/limit
continue <- TRUE
sigma <- increment
while(continue){
eps <- price - BSM(S,K,r,sigma,TTM)
if(abs(eps) < limit){
continue <- FALSE
}
sigma <- sigma + increment
if(sigma > 2){
continue <- FALSE
sigma <- NA
}
}
return(sigma)
}
dates <- c('2022-03-02',
#'2022-03-21',
#'2022-05-20',
'2022-04-29',
'2022-04-01',
'2022-07-29',
'2023-01-20')
SPX <- getOptionChain('^SPX', dates)
expiry_dates <- as.Date(names(SPX), format = '%b.%d.%Y')
expiry_days <- expiry_dates - Sys.Date()
i = 1
for(df in SPX){
#if(as.character(as.Date(names(SPX)[i], format = '%b.%d.%Y')) %in% dates){
if(i == 1){
merged <- df$call
merged$Expiry <- as.numeric(expiry_days[i])
}
else{
current <- df$calls
current$Expiry <- as.numeric(expiry_days[i])
merged <- rbind(merged, current)
}
#}
i = i + 1
}
data <- merged
S0 <- getQuote('^SPX')$Last; r <- 0
#merged$Expiry <- merged$Expiry/365
merged$Price <- (merged$Bid+merged$Ask)/2
merged$Moneyness <- log(merged$Strike/S0)
merged <- merged[abs(merged$Moneyness) < 0.7,]
merged <- merged[merged$IV > mean(merged$IV)-sd(merged$IV),]
merged <- merged[merged$IV<mean(merged$IV)+sd(merged$IV),]
merged <- merged[c('Strike','Price', 'Expiry', 'IV', 'Moneyness')]
merged <- merged[!(is.na(merged$Price)),]
l <- length(merged$Price)
errors = TRUE
while(errors){
len <- 0
k = 1
for(expiry in unique(merged$Expiry)){
print(expiry)
remove <- vector()
for(i in 2:(length(merged[merged$Expiry==expiry, 'Price'])-1)){
print(i)
if((merged[merged$Expiry==expiry, 'Price'][i-1] < merged[merged$Expiry==expiry, 'Price'][i]) && (merged[merged$Expiry==expiry, 'Price'][i+1] < merged[merged$Expiry==expiry, 'Price'][i])){
remove[k] <- i
k <- k + 1
}
len <- len + length(remove)
}
merged[merged$Expiry==expiry, 'Price'][remove] <- NA
}
if(len == 0){
errors <- FALSE
}
merged <- merged[!(is.na(merged$Price)),]
}
for(i in 1:l){
merged[i, 'impVol'] <- impVol(merged$Price[i], merged$Strike[i], merged$Expiry[i]/365, S0, r)
print(i)
}
merged
BSMVega <- function(S,K,r,sigma,TTM){
d1 <- (log(S/K) + (r + sigma^2/2) * TTM)/(sigma * sqrt(TTM))
return(S * dnorm(d1) * sqrt(TTM))
}
